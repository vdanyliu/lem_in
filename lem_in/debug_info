
STRSTR(3)                BSD Library Functions Manual                STRSTR(3)

NNAAMMEE
     ssttrrssttrr, ssttrrccaasseessttrr, ssttrrnnssttrr -- locate a substring in a string

LLIIBBRRAARRYY
     Standard C Library (libc, -lc)

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<ssttrriinngg..hh>>

     _c_h_a_r _*
     ssttrrssttrr(_c_o_n_s_t _c_h_a_r _*_h_a_y_s_t_a_c_k, _c_o_n_s_t _c_h_a_r _*_n_e_e_d_l_e);

     _c_h_a_r _*
     ssttrrccaasseessttrr(_c_o_n_s_t _c_h_a_r _*_h_a_y_s_t_a_c_k, _c_o_n_s_t _c_h_a_r _*_n_e_e_d_l_e);

     _c_h_a_r _*
     ssttrrnnssttrr(_c_o_n_s_t _c_h_a_r _*_h_a_y_s_t_a_c_k, _c_o_n_s_t _c_h_a_r _*_n_e_e_d_l_e, _s_i_z_e___t _l_e_n);

     ##iinncclluuddee <<ssttrriinngg..hh>>
     ##iinncclluuddee <<xxllooccaallee..hh>>

     _c_h_a_r _*
     ssttrrccaasseessttrr__ll(_c_o_n_s_t _c_h_a_r _*_h_a_y_s_t_a_c_k, _c_o_n_s_t _c_h_a_r _*_n_e_e_d_l_e, _l_o_c_a_l_e___t _l_o_c);

DDEESSCCRRIIPPTTIIOONN
     The ssttrrssttrr() function locates the first occurrence of the null-terminated
     string _n_e_e_d_l_e in the null-terminated string _h_a_y_s_t_a_c_k.

     The ssttrrccaasseessttrr() function is similar to ssttrrssttrr(), but ignores the case of
     both strings.

     The ssttrrnnssttrr() function locates the first occurrence of the null-termi-
     nated string _n_e_e_d_l_e in the string _h_a_y_s_t_a_c_k, where not more than _l_e_n char-
     acters are searched.  Characters that appear after a `\0' character are
     not searched.  Since the ssttrrnnssttrr() function is a FreeBSD specific API, it
     should only be used when portability is not a concern.

     While the ssttrrccaasseessttrr() function uses the current locale, the
     ssttrrccaasseessttrr__ll() function may be passed a locale directly. See xlocale(3)
     for more information.

RREETTUURRNN VVAALLUUEESS
     If _n_e_e_d_l_e is an empty string, _h_a_y_s_t_a_c_k is returned; if _n_e_e_d_l_e occurs
     nowhere in _h_a_y_s_t_a_c_k, NULL is returned; otherwise a pointer to the first
     character of the first occurrence of _n_e_e_d_l_e is returned.

EEXXAAMMPPLLEESS
     The following sets the pointer _p_t_r to the "Bar Baz" portion of
     _l_a_r_g_e_s_t_r_i_n_g:

           const char *largestring = "Foo Bar Baz";
           const char *smallstring = "Bar";
           char *ptr;

           ptr = strstr(largestring, smallstring);

     The following sets the pointer _p_t_r to NULL, because only the first 4
     characters of _l_a_r_g_e_s_t_r_i_n_g are searched:

           const char *largestring = "Foo Bar Baz";
           const char *smallstring = "Bar";
           char *ptr;

           ptr = strnstr(largestring, smallstring, 4);

SSEEEE AALLSSOO
     memchr(3), memmem(3), strchr(3), strcspn(3), strpbrk(3), strrchr(3),
     strsep(3), strspn(3), strtok(3), wcsstr(3), xlocale(3)

SSTTAANNDDAARRDDSS
     The ssttrrssttrr() function conforms to ISO/IEC 9899:1990 (``ISO C90'').

BSD                            October 11, 2001                            BSD
